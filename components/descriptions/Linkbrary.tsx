"use client";

import { useLanguageStore } from "@/zustand/store";

export default function Linkbrary() {
  const lang = useLanguageStore((state) => state.language);

  if (lang === "korean") {
    return (
      <p>
        부트캠프 시작과 동시에 진행되어, 수료할 때까지 매주 과제가 추가되는
        식으로 기능이 더해진 프로젝트입니다.
        <br />
        <br /> 바닐라 자바스크립트부터 리액트와 타입스크립트를 거쳐 next.js까지,
        6개월 동안 배운 기술의 파일 형식과 문법이 마구 섞여버려, 수료 후 next.js
        14버전으로 전체적인 마이그레이션을 진행했습니다.
        <br />
        <br /> 즐겨찾기를 추가하고 폴더별로 관리하는 간단한 서비스지만 웹 개발을
        배우고 만든 첫 프로젝트이기도 하고, 지금도 많이 부족하지만, 당시엔 정말
        미지의 영역이었던 css의 속성들을 하나하나 검색해 가며 만들어 나갔던
        추억이 많이 남은 프로젝트입니다.
        <br />
        <br />
        마이그레이션을 진행하면서 next.js 14버전의 서버 컴포넌트와 클라이언트
        컴포넌트 개념을 이해하고 새로 추가된 App Router 방식을 공부하는 데 많은
        도움이 되었으며, zustand를 활용해 전역 상태 관리를 해보면서 경량화된
        라이브러리의 장점에 대해 배웠습니다.
      </p>
    );
  } else {
    return (
      <p>
        コーディング塾の始めと同時に修了まで毎週課題が追加されたプロジェクトでした。
        <br />
        <br /> ヴァニラJavaScriptからreact,
        Typescriptとnext.jsまで、六ヶ月のうちに毎週教わった技術と文法はめちゃくちゃ混ざってしまって修了した後next.jsの14バージョンでマイグレーションを進行いたしました。
        <br />
        <br />
        ブックマークを追加し、フォルダで管理する簡単なサービスですが、ウェブ開発を始めて作った初プロジェクトですし、今も不足すぎますけど、当時は本当に未知の領域だったcssの属性を一つ一つ検索しながら作っていった思い手が残ったプロジェクトであります。
        <br />
        <br />
        マイグレーションをいたしながらnext.js
        14バージョンのサーバーコンポーネントとクライアントコンポーネントの違いを理解し、新たなApp
        Router方式の勉強にたくさん助かりました。そしてzustandを活用した全域状態管理をしてみたことで軽量化されたライブラリの長所について知ることになりました。
      </p>
    );
  }
}
